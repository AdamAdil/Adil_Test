resource_types:
- name: artifactory
  type: docker-image
  source:
          repository: pivotalservices/artifactory-resource


resources:
- name: hello-world
  type: git
  source:
    uri: https://github.com/ArisGloba1/hello-world.git
    #tag_filter: '1.0.*'

- name: Stagin
  type: artifactory
  source:
    endpoint: http://10.194.1.32:3001/artifactory
    repository: "/war-files/hello"
    regex: "agGlobal-(?<version>.*).war"
    #regex: "agGlobal-1.0.0.war"
    username: admin
    password: password
    skip_ssl_verification: true



- name: Prod
  type: artifactory
  source:
    endpoint: http://10.194.1.32:3000/
    #repository: "/war-files/hello"
    #regex: "agGlobal-(?<version>.*).war"
    #regex: "agGlobal-1.0.0.war"
    username: ubuntu
    password: ubuntu
    #   skip_ssl_verification: true


    
    ##### job work ########

    #### JOB SECTION #########

jobs:

- name: build-n-test
  public: true
  plan:
  - get: hello-world
    trigger: true
  - task: build-n-test
    config:
      platform: linux
      inputs:
      - name: hello-world
        #outputs:
        #- name: hello_war
      image_resource:
        type: docker-image
        source: { repository: maven, tag: 3.3.9-jdk-8 }
      run:


        path: sh
        args:
        - -exc
        - |
          export TERM=dumb
          #ls -R ./hello-world
          cd  ./hello-world/
          mvn test
          # mv target/agGlobal-*.war  ../hello_war



- name: Staging-Deploy
  public: true
  plan:
  - get: hello-world
    passed: [build-n-test]
    trigger: true
  - task: Deploy-war
    config:
      platform: linux
      inputs:
      - name: hello-world
      outputs:
      - name: hello_war
      image_resource:
        type: docker-image
        source: { repository: maven, tag: 3.3.9-jdk-8 }
      run:


        path: sh
        args:
        - -exc
        - |
          export TERM=dumb 
          #ls -R ./hello-world
          cd  ./hello-world/
          mvn clean install
          mv target/agGlobal-*.war  ../hello_war
      
  - put: Stagin
    params:
      file: hello_war/agGlobal-*.war
      

- name: Prod-Release
  public: true
  plan:
  - get: Stagin
    passed: [Staging-Deploy]
    trigger: true
  - task: Deploy-in-tomcat
    config:
      platform: linux
      inputs:
      - name: Stagin
      outputs:
      - name: hello_war_tom
      image_resource:
        type: docker-image
        source: { repository: maven, tag: 3.3.9-jdk-8, docker-ce }
      run:


        path: sh
        args:
        - -exc
        - |
          export TERM=dumb
          pwd
          ls -lrt .
          cp -r  Stagin/* /opt/tomcat/apache-tomcat-9.0.30/webapps/
          ls -lart ./hello_war_tom

          #          curl -sSL https://get.docker.com/ | sh

          # curl -fsSLO https://get.docker/builds/Linux/x86_64/docker-17.04.0-ce.tgz \
          #&& tar xzvf docker-17.04.0-ce.tgz \
          #&& mv docker/docker /usr/local/bin \
          #&& rm -r docker docker-17.04.0-ce.tgz
          #          docker cp  hello_war_tom/*   /opt/tomcat/apache-tomcat-9.0.30/webapps/
  - put: Prod
    params:
      file: /opt/tomcat/apache-tomcat-9.0.30/webapps/agGlobal-*.war
     #scp -r  -P 22223 -o StrictHostKeyChecking=no -o CheckHostIP=no hello_war_tom/*  root@10.194.1.32:/opt/tomcat/apache-tomcat-9.0.30/webapps/ \
